@page "/login"
@using RecipeBookProject.Client.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

<div class="card">
    <div class="card-body">
        <EditForm Model="@_loginRequest" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label>Email</label>
                <InputText class="form-control" @bind-Value="_loginRequest.Email" />
                <ValidationMessage For="@(() => _loginRequest.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText type="password" class="form-control" @bind-Value="_loginRequest.Password" />
                <ValidationMessage For="@(() => _loginRequest.Password)" />
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Login</button>
            @if (!string.IsNullOrEmpty(_errorMessage))
            {
                <div class="alert alert-danger mt-2">@_errorMessage</div>
            }
        </EditForm>
    </div>
</div>

@code {
    private LoginRequestDto _loginRequest = new LoginRequestDto();
    private string _errorMessage;

    private async Task HandleLogin()
    {
        var result = await AuthService.LoginAsync(_loginRequest);
        if (result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _errorMessage = "Giriş başarısız. Lütfen bilgilerinizi kontrol edin.";
        }
    }
}